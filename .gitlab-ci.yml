variables:
  rh_20_release: '2-0-8'
  rh_22_release: '2-2-0'
  rh_23_release: '2-3-0'
  abi_check_previous_release: '4.0.1-6'
  namespace: rh.

stages:
  - build
  - test
  - deploy
  - trigger

.package: &package
  image: ${docker_registry}${docker_rpm_repository}docker:latest-rpm
  stage: build
  tags:
    - ca
    - docker
  before_script:
    - safe_version=$(echo ${short_version} | tr -d -)
    - safe_ref=$(echo ${CI_COMMIT_REF_NAME} | tr -d /| tr '[:upper:]' '[:lower:]')
    - if [ -z "$CI_COMMIT_TAG" ]; then
        redhawk_version=${latest_version}
        rpm_release="0.$CI_PIPELINE_ID.rh${safe_version}";
      else
        redhawk_version=${release_version}
        rpm_release="`rpm --query --queryformat "%{release}\n" --specfile ${namespace}$CI_PROJECT_NAME.spec | head -n 1 | awk -F"." "{print $1}"`.rh${safe_version}";
      fi
    - redhawk_repo=$s3_repo_url/redhawk/cf-and-deps/yum/$redhawk_version/$dist/$arch
  script:
    - datetime=$(git show -s --format=%ci ${CI_COMMIT_SHA})
    - sed -i -e "s/__REVISION__/${CI_COMMIT_SHA}/" ${namespace}$CI_PROJECT_NAME.spec
    - sed -i -e "s/__DATETIME__/${datetime}/" ${namespace}$CI_PROJECT_NAME.spec
    - printf "FROM ${docker_registry}${rpmbuild_repository}rpmbuild:$dist-$arch-onbuild" > Dockerfile
    - docker login ${docker_registry} -u ${docker_user} -p ${docker_password}
    - docker image build --pull
                         --tag=$CI_PROJECT_PATH_SLUG-$safe_ref-$dist-$arch-rh${safe_version}
                         --build-arg "project=$CI_PROJECT_NAME"
                         --build-arg "rpm_release=$rpm_release"
                         --build-arg "spec_file=${namespace}$CI_PROJECT_NAME.spec"
                         --build-arg "arch=$arch"
                         --build-arg "other_repos=$redhawk_repo" .
    - id=$(docker container create $CI_PROJECT_PATH_SLUG-$safe_ref-$dist-$arch-rh${safe_version})
    - docker container cp $id:/root/rpmbuild/RPMS/ output/
    - docker container rm -f $id || true
    - docker image rm -f $CI_PROJECT_PATH_SLUG-$safe_ref-$dist-$arch-rh${safe_version} || true
    - rpm -qip output/*/*.rpm
  artifacts:
    paths:
      - output/*/*.rpm
    expire_in: 2 days
  except:
    - master
    - /^.*-external$/
    - /^(\d+\.)?(\d+)?(\.\d+)$/

package:el6:rh2.0:
  variables:
    latest_version: develop-2-0
    release_version: $rh_20_release
    short_version: '2.0'
    dist: el6
    arch: x86_64
  <<: *package

package:el6-i386:rh2.0:
  variables:
    latest_version: develop-2-0
    release_version: $rh_20_release
    short_version: '2.0'
    dist: el6
    arch: i686
  <<: *package

package:el7:rh2.0:
  variables:
    latest_version: develop-2-0
    release_version: $rh_20_release
    short_version: '2.0'
    dist: el7
    arch: x86_64
  <<: *package

package:el6:rh2.2:
  variables:
    latest_version: develop-2-2
    release_version: $rh_22_release
    short_version: '2.2'
    dist: el6
    arch: x86_64
  <<: *package

package:el6-i386:rh2.2:
  variables:
    latest_version: develop-2-2
    release_version: $rh_22_release
    short_version: '2.2'
    dist: el6
    arch: i686
  <<: *package

package:el7:rh2.2:
  variables:
    latest_version: develop-2-2
    release_version: $rh_22_release
    short_version: '2.2'
    dist: el7
    arch: x86_64
  <<: *package

package:el6:rh2.3:
  variables:
    latest_version: develop
    release_version: $rh_23_release
    short_version: '2.3'
    dist: el6
    arch: x86_64
  <<: *package

package:el6-i386:rh2.3:
  variables:
    latest_version: develop
    release_version: $rh_23_release
    short_version: '2.3'
    dist: el6
    arch: i686
  <<: *package

package:el7:rh2.3:
  variables:
    latest_version: develop
    release_version: $rh_23_release
    short_version: '2.3'
    dist: el7
    arch: x86_64
  <<: *package

.s3: &s3
  image: ${docker_registry}utils/s3cmd:el6-createrepo
  stage: deploy
  tags:
    - s3
  script:
    - /usr/bin/s3cmd sync s3://$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/yum/$CI_COMMIT_REF_SLUG/rh${short_version}/$dist/$arch .
    - mkdir -p $arch
    - for file in `find output -name *.rpm`; do
        cp $file $arch;
      done
    - repomanage --keep=2 --old $arch| xargs rm -f; createrepo --update $arch
    - /usr/bin/s3cmd sync -F -v --delete-removed $arch s3://$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/yum/$CI_COMMIT_REF_SLUG/rh${short_version}/$dist/  && s3cmd setacl -v s3://$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/yum/$CI_COMMIT_REF_SLUG/rh${short_version}/$dist --acl-public --recursive || true
  except:
    - master
    - /^.*-external$/
    - /^(\d+\.)?(\d+)?(\.\d+)$/

deploy-el7-2.3:
  variables:
    dist: el7
    arch: x86_64
    short_version: '2.3'
  dependencies:
    - package:el7:rh2.3
  <<: *s3

deploy-el7-2.2:
  variables:
    dist: el7
    arch: x86_64
    short_version: '2.2'
  dependencies:
    - package:el7:rh2.2
  <<: *s3

deploy-el7-2.0:
  variables:
    dist: el7
    arch: x86_64
    short_version: '2.0'
  dependencies:
    - package:el7:rh2.0
  <<: *s3

deploy-el6-2.3:
  variables:
    dist: el6
    arch: x86_64
    short_version: '2.3'
  dependencies:
    - package:el6:rh2.3
  <<: *s3

deploy-el6-2.2:
  variables:
    dist: el6
    arch: x86_64
    short_version: '2.2'
  dependencies:
    - package:el6:rh2.2
  <<: *s3

deploy-el6-2.0:
  variables:
    dist: el6
    arch: x86_64
    short_version: '2.0'
  dependencies:
    - package:el6:rh2.0
  <<: *s3

deploy-el6-i386-2.3:
  variables:
    dist: el6
    arch: i686
    short_version: '2.3'
  dependencies:
    - package:el6-i386:rh2.3
  <<: *s3

deploy-el6-i386-2.2:
  variables:
    dist: el6
    arch: i686
    short_version: '2.2'
  dependencies:
    - package:el6-i386:rh2.2
  <<: *s3

deploy-el6-i386-2.0:
  variables:
    dist: el6
    arch: i686
    short_version: '2.0'
  dependencies:
    - package:el6-i386:rh2.0
  <<: *s3

deploy:
  image: ${docker_registry}centos:7
  stage: deploy
  dependencies: []
  script:
    - if [ -n "$jenkins_url" ]; then
        echo "Deploying to $jenkins_url/job/$CI_PROJECT_NAMESPACE/job/$CI_PROJECT_NAME-$CI_COMMIT_REF_NAME"
        curl --insecure -X POST $jenkins_url/job/$CI_PROJECT_NAMESPACE/job/$CI_PROJECT_NAME-$CI_COMMIT_REF_NAME/buildWithParameters?pipeline_id=$CI_PIPELINE_ID --user $jenkins_user:$jenkins_api_token;
      fi
  except:
    - master
    - /^.*-external$/
    - /^(\d+\.)?(\d+)?(\.\d+)$/

abi-check:
  image: ${docker_registry}redhawk/buildenv:2.2-el7
  stage: test
  dependencies:
    - package:el7:rh2.2
  before_script:
    - abi_check_previous_release_slug="`echo ${abi_check_previous_release} | sed -r 's/\./-/g'`";
  script:
    - curl -fsSL $s3_repo_url/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/yum/$abi_check_previous_release_slug/rh2.2/el7/x86_64/$namespace$CI_PROJECT_NAME-$abi_check_previous_release.rh2.2.el7.x86_64.rpm > $namespace$CI_PROJECT_NAME-$abi_check_previous_release.rh2.2.el7.x86_64.rpm
    - curl -fsSL $s3_repo_url/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/yum/$abi_check_previous_release_slug/rh2.2/el7/x86_64/$namespace$CI_PROJECT_NAME-debuginfo-$abi_check_previous_release.rh2.2.el7.x86_64.rpm > $namespace$CI_PROJECT_NAME-debuginfo-$abi_check_previous_release.rh2.2.el7.x86_64.rpm
    - curl -fsSL $s3_repo_url/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/yum/$abi_check_previous_release_slug/rh2.2/el7/x86_64/$namespace$CI_PROJECT_NAME-devel-$abi_check_previous_release.rh2.2.el7.x86_64.rpm > $namespace$CI_PROJECT_NAME-devel-$abi_check_previous_release.rh2.2.el7.x86_64.rpm
    - abipkgdiff --verbose
                 --debug-info-pkg1 $namespace$CI_PROJECT_NAME-debuginfo-$abi_check_previous_release.rh2.2.el7.x86_64.rpm
                 --debug-info-pkg2 output/x86_64/$namespace$CI_PROJECT_NAME-debuginfo*.rpm
                 --devel-pkg1 $namespace$CI_PROJECT_NAME-devel-$abi_check_previous_release.rh2.2.el7.x86_64.rpm
                 --devel-pkg2 output/x86_64/$namespace$CI_PROJECT_NAME-devel*.rpm
                 $namespace$CI_PROJECT_NAME-$abi_check_previous_release.rh2.2.el7.x86_64.rpm
                 output/x86_64/$namespace$CI_PROJECT_NAME-5*.rpm
  except:
    - master
    - /^.*-external$/
    - /^(\d+\.)?(\d+)?(\.\d+)$/
  allow_failure: true

trigger:
  image: ${docker_registry}${trigger_repo}trigger:latest
  stage: trigger
  dependencies: []
  script:
    - gitlab-ci-trigger --file ${dependencies_url}
  only:
    - branches
  except:
    - master
    - /^.*-external$/
    - /^(\d+\.)?(\d+)?(\.\d+)$/
    - /^.*-(\d+\.)?(\d+)?(\.\d+)$/
  allow_failure: true
